// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lightstep/collector/lightstep_carrier.proto

/*
Package lightstep is a generated protocol buffer package.

It is generated from these files:
	lightstep/collector/lightstep_carrier.proto

It has these top-level messages:
	BinaryCarrier
	BasicTracerCarrier
*/
package lightstep

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The standard carrier for binary context propagation into LightStep.
type BinaryCarrier struct {
	// "text_ctx" was deprecated following lightstep-tracer-cpp-0.36
	DeprecatedTextCtx [][]byte `protobuf:"bytes,1,rep,name=deprecated_text_ctx,json=deprecatedTextCtx,proto3" json:"deprecated_text_ctx,omitempty"`
	// The Opentracing "basictracer" proto.
	BasicCtx *BasicTracerCarrier `protobuf:"bytes,2,opt,name=basic_ctx,json=basicCtx" json:"basic_ctx,omitempty"`
}

func (m *BinaryCarrier) Reset()                    { *m = BinaryCarrier{} }
func (m *BinaryCarrier) String() string            { return proto.CompactTextString(m) }
func (*BinaryCarrier) ProtoMessage()               {}
func (*BinaryCarrier) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *BinaryCarrier) GetDeprecatedTextCtx() [][]byte {
	if m != nil {
		return m.DeprecatedTextCtx
	}
	return nil
}

func (m *BinaryCarrier) GetBasicCtx() *BasicTracerCarrier {
	if m != nil {
		return m.BasicCtx
	}
	return nil
}

// Copy of https://github.com/opentracing/basictracer-go/blob/master/wire/wire.proto
type BasicTracerCarrier struct {
	TraceId      uint64            `protobuf:"fixed64,1,opt,name=trace_id,json=traceId" json:"trace_id,omitempty"`
	SpanId       uint64            `protobuf:"fixed64,2,opt,name=span_id,json=spanId" json:"span_id,omitempty"`
	Sampled      bool              `protobuf:"varint,3,opt,name=sampled" json:"sampled,omitempty"`
	BaggageItems map[string]string `protobuf:"bytes,4,rep,name=baggage_items,json=baggageItems" json:"baggage_items,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *BasicTracerCarrier) Reset()                    { *m = BasicTracerCarrier{} }
func (m *BasicTracerCarrier) String() string            { return proto.CompactTextString(m) }
func (*BasicTracerCarrier) ProtoMessage()               {}
func (*BasicTracerCarrier) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BasicTracerCarrier) GetTraceId() uint64 {
	if m != nil {
		return m.TraceId
	}
	return 0
}

func (m *BasicTracerCarrier) GetSpanId() uint64 {
	if m != nil {
		return m.SpanId
	}
	return 0
}

func (m *BasicTracerCarrier) GetSampled() bool {
	if m != nil {
		return m.Sampled
	}
	return false
}

func (m *BasicTracerCarrier) GetBaggageItems() map[string]string {
	if m != nil {
		return m.BaggageItems
	}
	return nil
}

func init() {
	proto.RegisterType((*BinaryCarrier)(nil), "lightstep.BinaryCarrier")
	proto.RegisterType((*BasicTracerCarrier)(nil), "lightstep.BasicTracerCarrier")
}

func init() { proto.RegisterFile("lightstep/collector/lightstep_carrier.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 294 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0xc9, 0xaa, 0xdb, 0xfa, 0xb6, 0x81, 0x8b, 0x82, 0x55, 0x10, 0xca, 0x4e, 0x05, 0xa1,
	0x83, 0x79, 0x91, 0x5d, 0x84, 0x0d, 0x0f, 0xbb, 0x86, 0xdd, 0x4b, 0x9a, 0x3c, 0x6a, 0xb0, 0x5b,
	0x4b, 0xfa, 0x94, 0x0e, 0xff, 0x72, 0x6f, 0x92, 0x4c, 0xab, 0x30, 0xf0, 0x96, 0xef, 0xfd, 0x7e,
	0x2f, 0xf9, 0x20, 0x70, 0x5f, 0x9a, 0xe2, 0x85, 0x1a, 0xc2, 0x7a, 0xae, 0xaa, 0xb2, 0x44, 0x45,
	0x95, 0x9d, 0x77, 0xb3, 0x4c, 0x49, 0x6b, 0x0d, 0xda, 0xb4, 0xb6, 0x15, 0x55, 0x3c, 0xec, 0xc0,
	0xec, 0x03, 0x26, 0x2b, 0xb3, 0x97, 0xf6, 0xb0, 0x3e, 0x1a, 0x3c, 0x85, 0x4b, 0x8d, 0xb5, 0x45,
	0x25, 0x09, 0x75, 0x46, 0xd8, 0x52, 0xa6, 0xa8, 0x8d, 0x58, 0x1c, 0x24, 0x63, 0x31, 0xfd, 0x45,
	0x5b, 0x6c, 0x69, 0x4d, 0x2d, 0x5f, 0x42, 0x98, 0xcb, 0xc6, 0x28, 0x6f, 0xf5, 0x62, 0x96, 0x8c,
	0x16, 0x77, 0x69, 0x77, 0x7f, 0xba, 0x72, 0x6c, 0x6b, 0xa5, 0x42, 0xfb, 0xfd, 0x82, 0x18, 0x7a,
	0x7f, 0x4d, 0xed, 0xec, 0x93, 0x01, 0x3f, 0x15, 0xf8, 0x0d, 0x0c, 0xc9, 0x0d, 0x32, 0xa3, 0x23,
	0x16, 0xb3, 0xa4, 0x2f, 0x06, 0x3e, 0x6f, 0x34, 0xbf, 0x86, 0x41, 0x53, 0xcb, 0xbd, 0x23, 0x3d,
	0x4f, 0xfa, 0x2e, 0x6e, 0x34, 0x8f, 0x60, 0xd0, 0xc8, 0x5d, 0x5d, 0xa2, 0x8e, 0x82, 0x98, 0x25,
	0x43, 0xf1, 0x13, 0xf9, 0x16, 0x26, 0xb9, 0x2c, 0x0a, 0x59, 0x60, 0x66, 0x08, 0x77, 0x4d, 0x74,
	0x16, 0x07, 0xc9, 0x68, 0x31, 0xff, 0xb7, 0x64, 0xba, 0x3a, 0xae, 0x6c, 0xdc, 0xc6, 0xf3, 0x9e,
	0xec, 0x41, 0x8c, 0xf3, 0x3f, 0xa3, 0xdb, 0x27, 0x98, 0x9e, 0x28, 0xfc, 0x02, 0x82, 0x57, 0x3c,
	0xf8, 0xce, 0xa1, 0x70, 0x47, 0x7e, 0x05, 0xe7, 0xef, 0xb2, 0x7c, 0x43, 0xdf, 0x36, 0x14, 0xc7,
	0xb0, 0xec, 0x3d, 0xb2, 0xbc, 0xef, 0xbf, 0xe2, 0xe1, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x4e, 0x61,
	0xa6, 0x5a, 0xb9, 0x01, 0x00, 0x00,
}
